{"version":3,"sources":["covid.svg","components/common/SubHeading.js","components/common/Text.js","covidState.js","components/common/Card.js","components/common/CovidData.js","components/Home.js","App.js","serviceWorker.js","store/reducers.js","store/index.js","index.js"],"names":["module","exports","SubHeading","state","className","this","props","text","Component","AniText","initialState","countries","indiaData","searchData","allData","worldData","error","search","Card","children","CovidData","data","country","toUpperCase","cases","todayCases","recovered","deaths","todayDeaths","active","critical","totalTests","testsPerOneMillion","casesPerOneMillion","deathsPerOneMillion","Home","time","Date","toString","substring","onChange","e","target","value","componentDidMount","getCovidData","AOS","init","offset","delay","duration","easing","mirror","once","setInterval","setState","covidStore","src","covid","fontSize","type","placeholder","name","map","ele","index","data-aos","key","mapDispatchToProps","dispatch","Promise","resolve","reject","fetch","method","headers","Headers","then","response","ok","json","payload","connect","App","Boolean","window","location","hostname","match","combineReducers","india","world","filter","console","log","toLowerCase","includes","store","createStore","reducers","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.536ec818.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid.775a7fbc.svg\";","import React, { Component } from 'react';\nclass SubHeading extends Component {\n    state = {  }\n    render() { \n        return ( \n            <span className=\"sub-heading\">\n                {this.props.text && <span className=\"sub-heading\">{this.props.text}</span>}\n            </span>\n         );\n    }\n}\n \nexport default SubHeading;","import React, { Component } from 'react';\nclass AniText extends Component {\n    state = {  }\n    render() { \n        return ( \n            <span className=\"text\">\n                {this.props.text && <span>{this.props.text}</span>}\n            </span>\n         );\n    }\n}\n \nexport default AniText;","export const initialState={\n   countries:null,\n   indiaData:null,\n   searchData:null,\n   allData:null,\n   worldData:null,\n   error:null,\n   search:null,\n}\n\nexport const SET_ALL_DATA=\"SET_ALL_DATA\";\nexport const SET_ERROR=\"SET_ERROR\";\nexport const SEARCH=\"SEARCH\";\n\nexport const search=(data)=>dispatch=>{\n    dispatch({\n        type:SEARCH,\n        payload:data\n    })\n}\n\nexport const getCovidData=()=>dispatch=>{\n    return new Promise((resolve,reject)=>{\n        fetch(\"https://coronavirus-19-api.herokuapp.com/countries\",\n        {\n            method: \"GET\",\n            headers: new Headers({\n              \"Content-Type\": \"application/json\",\n            })\n          }\n        ).then((response)=>{\n            if(response.ok){\n                response.json().then((data)=>{\n                    dispatch({\n                        type:SET_ALL_DATA,\n                        payload:data\n                    })\n                    resolve(true)\n                })\n            }else{\n                dispatch({\n                    type:SET_ERROR,\n                })\n                resolve(false)\n            }\n        })\n    })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default function covidReducer(state=initialState,{type,payload}){\n    switch(type){\n        case SET_ALL_DATA:\n            let india;\n            if(payload){\n                india=payload.filter(data=>data.country===\"India\")\n            }\n            let world;\n            if(payload){\n                world=payload.filter(data=>data.country===\"World\")  \n            }\n            return{\n                ...state,\n                allData:payload,\n                indiaData:india[0],\n                worldData:world[0]\n            }\n        case SET_ERROR:\n            return{\n                ...state,\n                error:\"Internet connection is poor or other problem\"\n            }\n        case SEARCH:\n            let search;\n            if(state.allData&&payload){\n                console.log(\"Pooja\")\n                search=state.allData.filter(data=>data.country.toLowerCase().includes(payload.toLowerCase()))\n            }\n            return{\n                ...state,\n                search:payload,\n                searchData:search\n            }\n        default:\n            return state\n    }\n}","import React, { Component } from 'react';\nclass Card extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"ani-card\">\n                {this.props.children}\n            </div>\n         );\n    }\n}\n \nexport default Card;","import React, { Component } from 'react'\nimport Card from './Card';\nclass CovidData extends Component {\n    state = {  }\n    render() { \n        let data=this.props.data||null\n        return ( \n           <Card>\n               <div className=\"covid-data-main-div\">\n               <div className=\"data-countary-container\">\n                   <p><span className=\"country\">Country : </span><span className=\"country-data\">{(data && data.country && data.country.toUpperCase())||\"\"}</span> </p> \n               </div>\n               <div className=\"child-data\">\n                   <p><span className=\"child-data\">Total Cases : </span><span>{data && data.cases}</span> </p>                   \n               </div>\n               <div className=\"child-data\">\n                   <p><span>Today Cases : </span><span>{data && data.todayCases}</span> </p>                   \n               </div>\n               <div className=\"recovered\">\n                   <p><span>Recovered : </span><span>{data && data.recovered}</span> </p>                   \n               </div>\n               <div className=\"death\">\n                   <p><span>Deaths : </span><span>{data && data.deaths}</span> </p>                   \n               </div>\n               <div className=\"death\">\n                   <p><span>Today Deaths : </span><span>{data && data.todayDeaths}</span> </p>                   \n               </div>\n               <div className=\"active\">\n                   <p><span>Active : </span><span>{data && data.active}</span> </p>                   \n               </div>\n               <div className=\"critical\">\n                   <p><span>Critical : </span><span>{data && data.critical}</span> </p>                   \n               </div>\n               <div className=\"child-data\">\n                   <p><span>Total Tests : </span><span>{data && data.totalTests}</span> </p>                   \n               </div>\n               <div className=\"child-data\">\n                   <p><span>Tests Per One Million : </span><span>{data && data.testsPerOneMillion}</span> </p>                   \n               </div>\n               <div className=\"child-data\">\n                   <p><span>Case Per One Million: </span><span>{data && data.casesPerOneMillion}</span> </p>                   \n               </div>\n               <div className=\"death\">\n                   <p><span>Deaths Per One Million: </span><span>{data && data.deathsPerOneMillion}</span> </p>                   \n               </div>\n               </div>\n           </Card>\n         );\n    }\n}\n \nexport default CovidData;","import React, { Component } from 'react';\nimport covid from \"../covid.svg\";\nimport SubHeading from './common/SubHeading';\nimport AniText from './common/Text';\nimport { getCovidData, search } from '../covidState';\nimport {connect} from \"react-redux\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CovidData from './common/CovidData';\nimport AOS from 'aos';\n\n\nclass Home extends Component {\n   state={\n    time:new Date().toString().substring(0,25),\n    searchData:null,\n    search:null\n   }\n\nonChange=(e)=>{\n    this.props.search(e.target.value)\n}\n   \ncomponentDidMount=()=>{\n    \nthis.props.getCovidData()\nAOS.init({\n    offset:120,\n    delay:20,\n    duration:1000,\n    easing:\"ease-in-out\",\n    mirror:true,\n    once:false,\n    // desable:\"mobile\"\n })\n\n   setInterval(()=>{\n    this.setState({\n        time:new Date().toString().substring(0,25),\n    })\n   },1000)\n}\n    render() { \n        let covidStore=this.props.covidStore\n        let allData=this.props.covidStore.allData\n        let indiaData=this.props.covidStore.indiaData;\n        let worldData=this.props.covidStore.worldData||null;\n        return ( \n            <div className=\"main-container\">\n                <div className=\"heading-container\">\n                    <p>C<span><img src={covid} className=\"covid\" /></span>VID-19 STATUS</p>\n                </div>\n                <div className=\"time-container\">\n                    <div>\n                        {this.state.time && <p><SubHeading text=\"Current time\" /> : <AniText text={this.state.time} /></p>}\n                    </div>\n                </div>\n                <div className=\"email-container\">\n                     <div className=\"email-icon\">\n                       <SearchIcon fontSize=\"large\"/>\n                    </div>\n                    <input type=\"text\" placeholder=\"Search by country\" className=\"input-text\" name=\"serch\" value={(covidStore.search)||\"\"} onChange={this.onChange}/>\n                </div>\n                {!covidStore.search?<div>\n                    <div className=\"india-world-container\">\n                        <div className=\"india\">\n                            <CovidData data={indiaData} />\n                        </div>\n                        <div className=\"world\">\n                            <CovidData data={worldData} />\n                        </div>\n                    </div>\n                    <div className=\"all-data-container\">\n                        {\n                            allData && allData.map((ele, index) => {\n                                return (\n                                    <div data-aos={(index%2===0)?\"fade-down-left\":\"fade-down-right\"} className=\"ani\">\n                                        <CovidData data={ele} key={index} />\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>:<div className=\"search-container\">\n                    {covidStore.searchData && covidStore.searchData.map((ele,index)=>{\n                         return (\n                            <div data-aos={(index%2===0)?\"fade-down-left\":\"fade-down-right\"}>\n                                <CovidData data={ele} key={index} />\n                            </div>\n                        )\n                    })}\n                </div>}\n            </div>\n         );\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        covidStore:state.covidStore\n    }\n}\nconst mapDispatchToProps={\n    getCovidData,\n    search\n\n} \n\nexport default connect(mapStateToProps,mapDispatchToProps) (Home);","import React from 'react';\nimport './App.css';\nimport Home from \"./components/Home\";\nimport Card from './components/common/Card';\nimport 'aos/dist/aos.css';\n\n\nfunction App() {\n  return (\n    <div>\n      <Card>\n        <Home />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport covidStore from '../covidState';\n\nexport default combineReducers({\n    covidStore\n})","import {createStore,applyMiddleware} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst store=createStore(reducers,applyMiddleware(ReduxThunk))\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}